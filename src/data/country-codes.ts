export interface CountryCode {
  name: string
  code: string
  flag: string
}

/**
 * Comprehensive list of country codes with flags and dialing codes
 * Sorted alphabetically by country name
 */
export const countryCodes: CountryCode[] = [
  { name: 'Afghanistan', code: '93', flag: 'ğŸ‡¦ğŸ‡«' },
  { name: 'Albania', code: '355', flag: 'ğŸ‡¦ğŸ‡±' },
  { name: 'Algeria', code: '213', flag: 'ğŸ‡©ğŸ‡¿' },
  { name: 'Andorra', code: '376', flag: 'ğŸ‡¦ğŸ‡©' },
  { name: 'Angola', code: '244', flag: 'ğŸ‡¦ğŸ‡´' },
  { name: 'Antigua and Barbuda', code: '1268', flag: 'ğŸ‡¦ğŸ‡¬' },
  { name: 'Argentina', code: '54', flag: 'ğŸ‡¦ğŸ‡·' },
  { name: 'Armenia', code: '374', flag: 'ğŸ‡¦ğŸ‡²' },
  { name: 'Australia', code: '61', flag: 'ğŸ‡¦ğŸ‡º' },
  { name: 'Austria', code: '43', flag: 'ğŸ‡¦ğŸ‡¹' },
  { name: 'Azerbaijan', code: '994', flag: 'ğŸ‡¦ğŸ‡¿' },
  { name: 'Bahamas', code: '1242', flag: 'ğŸ‡§ğŸ‡¸' },
  { name: 'Bahrain', code: '973', flag: 'ğŸ‡§ğŸ‡­' },
  { name: 'Bangladesh', code: '880', flag: 'ğŸ‡§ğŸ‡©' },
  { name: 'Barbados', code: '1246', flag: 'ğŸ‡§ğŸ‡§' },
  { name: 'Belarus', code: '375', flag: 'ğŸ‡§ğŸ‡¾' },
  { name: 'Belgium', code: '32', flag: 'ğŸ‡§ğŸ‡ª' },
  { name: 'Belize', code: '501', flag: 'ğŸ‡§ğŸ‡¿' },
  { name: 'Benin', code: '229', flag: 'ğŸ‡§ğŸ‡¯' },
  { name: 'Bhutan', code: '975', flag: 'ğŸ‡§ğŸ‡¹' },
  { name: 'Bolivia', code: '591', flag: 'ğŸ‡§ğŸ‡´' },
  { name: 'Bosnia and Herzegovina', code: '387', flag: 'ğŸ‡§ğŸ‡¦' },
  { name: 'Botswana', code: '267', flag: 'ğŸ‡§ğŸ‡¼' },
  { name: 'Brazil', code: '55', flag: 'ğŸ‡§ğŸ‡·' },
  { name: 'Brunei', code: '673', flag: 'ğŸ‡§ğŸ‡³' },
  { name: 'Bulgaria', code: '359', flag: 'ğŸ‡§ğŸ‡¬' },
  { name: 'Burkina Faso', code: '226', flag: 'ğŸ‡§ğŸ‡«' },
  { name: 'Burundi', code: '257', flag: 'ğŸ‡§ğŸ‡®' },
  { name: 'Cambodia', code: '855', flag: 'ğŸ‡°ğŸ‡­' },
  { name: 'Cameroon', code: '237', flag: 'ğŸ‡¨ğŸ‡²' },
  { name: 'Canada', code: '1-CA', flag: 'ğŸ‡¨ğŸ‡¦' },
  { name: 'Cape Verde', code: '238', flag: 'ğŸ‡¨ğŸ‡»' },
  { name: 'Central African Republic', code: '236', flag: 'ğŸ‡¨ğŸ‡«' },
  { name: 'Chad', code: '235', flag: 'ğŸ‡¹ğŸ‡©' },
  { name: 'Chile', code: '56', flag: 'ğŸ‡¨ğŸ‡±' },
  { name: 'China', code: '86', flag: 'ğŸ‡¨ğŸ‡³' },
  { name: 'Colombia', code: '57', flag: 'ğŸ‡¨ğŸ‡´' },
  { name: 'Comoros', code: '269', flag: 'ğŸ‡°ğŸ‡²' },
  { name: 'Congo', code: '242', flag: 'ğŸ‡¨ğŸ‡¬' },
  { name: 'Costa Rica', code: '506', flag: 'ğŸ‡¨ğŸ‡·' },
  { name: 'Croatia', code: '385', flag: 'ğŸ‡­ğŸ‡·' },
  { name: 'Cuba', code: '53', flag: 'ğŸ‡¨ğŸ‡º' },
  { name: 'Cyprus', code: '357', flag: 'ğŸ‡¨ğŸ‡¾' },
  { name: 'Czech Republic', code: '420', flag: 'ğŸ‡¨ğŸ‡¿' },
  { name: 'Denmark', code: '45', flag: 'ğŸ‡©ğŸ‡°' },
  { name: 'Djibouti', code: '253', flag: 'ğŸ‡©ğŸ‡¯' },
  { name: 'Dominica', code: '1767', flag: 'ğŸ‡©ğŸ‡²' },
  { name: 'Dominican Republic', code: '1809', flag: 'ğŸ‡©ğŸ‡´' },
  { name: 'East Timor', code: '670', flag: 'ğŸ‡¹ğŸ‡±' },
  { name: 'Ecuador', code: '593', flag: 'ğŸ‡ªğŸ‡¨' },
  { name: 'Egypt', code: '20', flag: 'ğŸ‡ªğŸ‡¬' },
  { name: 'El Salvador', code: '503', flag: 'ğŸ‡¸ğŸ‡»' },
  { name: 'Equatorial Guinea', code: '240', flag: 'ğŸ‡¬ğŸ‡¶' },
  { name: 'Eritrea', code: '291', flag: 'ğŸ‡ªğŸ‡·' },
  { name: 'Estonia', code: '372', flag: 'ğŸ‡ªğŸ‡ª' },
  { name: 'Ethiopia', code: '251', flag: 'ğŸ‡ªğŸ‡¹' },
  { name: 'Fiji', code: '679', flag: 'ğŸ‡«ğŸ‡¯' },
  { name: 'Finland', code: '358', flag: 'ğŸ‡«ğŸ‡®' },
  { name: 'France', code: '33', flag: 'ğŸ‡«ğŸ‡·' },
  { name: 'Gabon', code: '241', flag: 'ğŸ‡¬ğŸ‡¦' },
  { name: 'Gambia', code: '220', flag: 'ğŸ‡¬ğŸ‡²' },
  { name: 'Georgia', code: '995', flag: 'ğŸ‡¬ğŸ‡ª' },
  { name: 'Germany', code: '49', flag: 'ğŸ‡©ğŸ‡ª' },
  { name: 'Ghana', code: '233', flag: 'ğŸ‡¬ğŸ‡­' },
  { name: 'Greece', code: '30', flag: 'ğŸ‡¬ğŸ‡·' },
  { name: 'Grenada', code: '1473', flag: 'ğŸ‡¬ğŸ‡©' },
  { name: 'Guatemala', code: '502', flag: 'ğŸ‡¬ğŸ‡¹' },
  { name: 'Guinea', code: '224', flag: 'ğŸ‡¬ğŸ‡³' },
  { name: 'Guinea-Bissau', code: '245', flag: 'ğŸ‡¬ğŸ‡¼' },
  { name: 'Guyana', code: '592', flag: 'ğŸ‡¬ğŸ‡¾' },
  { name: 'Haiti', code: '509', flag: 'ğŸ‡­ğŸ‡¹' },
  { name: 'Honduras', code: '504', flag: 'ğŸ‡­ğŸ‡³' },
  { name: 'Hungary', code: '36', flag: 'ğŸ‡­ğŸ‡º' },
  { name: 'Iceland', code: '354', flag: 'ğŸ‡®ğŸ‡¸' },
  { name: 'India', code: '91', flag: 'ğŸ‡®ğŸ‡³' },
  { name: 'Indonesia', code: '62', flag: 'ğŸ‡®ğŸ‡©' },
  { name: 'Iran', code: '98', flag: 'ğŸ‡®ğŸ‡·' },
  { name: 'Iraq', code: '964', flag: 'ğŸ‡®ğŸ‡¶' },
  { name: 'Ireland', code: '353', flag: 'ğŸ‡®ğŸ‡ª' },
  { name: 'Israel', code: '972', flag: 'ğŸ‡®ğŸ‡±' },
  { name: 'Italy', code: '39', flag: 'ğŸ‡®ğŸ‡¹' },
  { name: 'Jamaica', code: '1876', flag: 'ğŸ‡¯ğŸ‡²' },
  { name: 'Japan', code: '81', flag: 'ğŸ‡¯ğŸ‡µ' },
  { name: 'Jordan', code: '962', flag: 'ğŸ‡¯ğŸ‡´' },
  { name: 'Kazakhstan', code: '7', flag: 'ğŸ‡°ğŸ‡¿' },
  { name: 'Kenya', code: '254', flag: 'ğŸ‡°ğŸ‡ª' },
  { name: 'Kiribati', code: '686', flag: 'ğŸ‡°ğŸ‡®' },
  { name: 'North Korea', code: '850', flag: 'ğŸ‡°ğŸ‡µ' },
  { name: 'South Korea', code: '82', flag: 'ğŸ‡°ğŸ‡·' },
  { name: 'Kuwait', code: '965', flag: 'ğŸ‡°ğŸ‡¼' },
  { name: 'Kyrgyzstan', code: '996', flag: 'ğŸ‡°ğŸ‡¬' },
  { name: 'Laos', code: '856', flag: 'ğŸ‡±ğŸ‡¦' },
  { name: 'Latvia', code: '371', flag: 'ğŸ‡±ğŸ‡»' },
  { name: 'Lebanon', code: '961', flag: 'ğŸ‡±ğŸ‡§' },
  { name: 'Lesotho', code: '266', flag: 'ğŸ‡±ğŸ‡¸' },
  { name: 'Liberia', code: '231', flag: 'ğŸ‡±ğŸ‡·' },
  { name: 'Libya', code: '218', flag: 'ğŸ‡±ğŸ‡¾' },
  { name: 'Liechtenstein', code: '423', flag: 'ğŸ‡±ğŸ‡®' },
  { name: 'Lithuania', code: '370', flag: 'ğŸ‡±ğŸ‡¹' },
  { name: 'Luxembourg', code: '352', flag: 'ğŸ‡±ğŸ‡º' },
  { name: 'Macedonia', code: '389', flag: 'ğŸ‡²ğŸ‡°' },
  { name: 'Madagascar', code: '261', flag: 'ğŸ‡²ğŸ‡¬' },
  { name: 'Malawi', code: '265', flag: 'ğŸ‡²ğŸ‡¼' },
  { name: 'Malaysia', code: '60', flag: 'ğŸ‡²ğŸ‡¾' },
  { name: 'Maldives', code: '960', flag: 'ğŸ‡²ğŸ‡»' },
  { name: 'Mali', code: '223', flag: 'ğŸ‡²ğŸ‡±' },
  { name: 'Malta', code: '356', flag: 'ğŸ‡²ğŸ‡¹' },
  { name: 'Marshall Islands', code: '692', flag: 'ğŸ‡²ğŸ‡­' },
  { name: 'Mauritania', code: '222', flag: 'ğŸ‡²ğŸ‡·' },
  { name: 'Mauritius', code: '230', flag: 'ğŸ‡²ğŸ‡º' },
  { name: 'Mexico', code: '52', flag: 'ğŸ‡²ğŸ‡½' },
  { name: 'Micronesia', code: '691', flag: 'ğŸ‡«ğŸ‡²' },
  { name: 'Moldova', code: '373', flag: 'ğŸ‡²ğŸ‡©' },
  { name: 'Monaco', code: '377', flag: 'ğŸ‡²ğŸ‡¨' },
  { name: 'Mongolia', code: '976', flag: 'ğŸ‡²ğŸ‡³' },
  { name: 'Montenegro', code: '382', flag: 'ğŸ‡²ğŸ‡ª' },
  { name: 'Morocco', code: '212', flag: 'ğŸ‡²ğŸ‡¦' },
  { name: 'Mozambique', code: '258', flag: 'ğŸ‡²ğŸ‡¿' },
  { name: 'Myanmar', code: '95', flag: 'ğŸ‡²ğŸ‡²' },
  { name: 'Namibia', code: '264', flag: 'ğŸ‡³ğŸ‡¦' },
  { name: 'Nauru', code: '674', flag: 'ğŸ‡³ğŸ‡·' },
  { name: 'Nepal', code: '977', flag: 'ğŸ‡³ğŸ‡µ' },
  { name: 'Netherlands', code: '31', flag: 'ğŸ‡³ğŸ‡±' },
  { name: 'New Zealand', code: '64', flag: 'ğŸ‡³ğŸ‡¿' },
  { name: 'Nicaragua', code: '505', flag: 'ğŸ‡³ğŸ‡®' },
  { name: 'Niger', code: '227', flag: 'ğŸ‡³ğŸ‡ª' },
  { name: 'Nigeria', code: '234', flag: 'ğŸ‡³ğŸ‡¬' },
  { name: 'Norway', code: '47', flag: 'ğŸ‡³ğŸ‡´' },
  { name: 'Oman', code: '968', flag: 'ğŸ‡´ğŸ‡²' },
  { name: 'Pakistan', code: '92', flag: 'ğŸ‡µğŸ‡°' },
  { name: 'Palau', code: '680', flag: 'ğŸ‡µğŸ‡¼' },
  { name: 'Panama', code: '507', flag: 'ğŸ‡µğŸ‡¦' },
  { name: 'Papua New Guinea', code: '675', flag: 'ğŸ‡µğŸ‡¬' },
  { name: 'Paraguay', code: '595', flag: 'ğŸ‡µğŸ‡¾' },
  { name: 'Peru', code: '51', flag: 'ğŸ‡µğŸ‡ª' },
  { name: 'Philippines', code: '63', flag: 'ğŸ‡µğŸ‡­' },
  { name: 'Poland', code: '48', flag: 'ğŸ‡µğŸ‡±' },
  { name: 'Portugal', code: '351', flag: 'ğŸ‡µğŸ‡¹' },
  { name: 'Qatar', code: '974', flag: 'ğŸ‡¶ğŸ‡¦' },
  { name: 'Romania', code: '40', flag: 'ğŸ‡·ğŸ‡´' },
  { name: 'Russia', code: '7', flag: 'ğŸ‡·ğŸ‡º' },
  { name: 'Rwanda', code: '250', flag: 'ğŸ‡·ğŸ‡¼' },
  { name: 'Saint Kitts and Nevis', code: '1869', flag: 'ğŸ‡°ğŸ‡³' },
  { name: 'Saint Lucia', code: '1758', flag: 'ğŸ‡±ğŸ‡¨' },
  { name: 'Saint Vincent and the Grenadines', code: '1784', flag: 'ğŸ‡»ğŸ‡¨' },
  { name: 'Samoa', code: '685', flag: 'ğŸ‡¼ğŸ‡¸' },
  { name: 'San Marino', code: '378', flag: 'ğŸ‡¸ğŸ‡²' },
  { name: 'Sao Tome and Principe', code: '239', flag: 'ğŸ‡¸ğŸ‡¹' },
  { name: 'Saudi Arabia', code: '966', flag: 'ğŸ‡¸ğŸ‡¦' },
  { name: 'Senegal', code: '221', flag: 'ğŸ‡¸ğŸ‡³' },
  { name: 'Serbia', code: '381', flag: 'ğŸ‡·ğŸ‡¸' },
  { name: 'Seychelles', code: '248', flag: 'ğŸ‡¸ğŸ‡¨' },
  { name: 'Sierra Leone', code: '232', flag: 'ğŸ‡¸ğŸ‡±' },
  { name: 'Singapore', code: '65', flag: 'ğŸ‡¸ğŸ‡¬' },
  { name: 'Slovakia', code: '421', flag: 'ğŸ‡¸ğŸ‡°' },
  { name: 'Slovenia', code: '386', flag: 'ğŸ‡¸ğŸ‡®' },
  { name: 'Solomon Islands', code: '677', flag: 'ğŸ‡¸ğŸ‡§' },
  { name: 'Somalia', code: '252', flag: 'ğŸ‡¸ğŸ‡´' },
  { name: 'South Africa', code: '27', flag: 'ğŸ‡¿ğŸ‡¦' },
  { name: 'South Sudan', code: '211', flag: 'ğŸ‡¸ğŸ‡¸' },
  { name: 'Spain', code: '34', flag: 'ğŸ‡ªğŸ‡¸' },
  { name: 'Sri Lanka', code: '94', flag: 'ğŸ‡±ğŸ‡°' },
  { name: 'Sudan', code: '249', flag: 'ğŸ‡¸ğŸ‡©' },
  { name: 'Suriname', code: '597', flag: 'ğŸ‡¸ğŸ‡·' },
  { name: 'Swaziland', code: '268', flag: 'ğŸ‡¸ğŸ‡¿' },
  { name: 'Sweden', code: '46', flag: 'ğŸ‡¸ğŸ‡ª' },
  { name: 'Switzerland', code: '41', flag: 'ğŸ‡¨ğŸ‡­' },
  { name: 'Syria', code: '963', flag: 'ğŸ‡¸ğŸ‡¾' },
  { name: 'Taiwan', code: '886', flag: 'ğŸ‡¹ğŸ‡¼' },
  { name: 'Tajikistan', code: '992', flag: 'ğŸ‡¹ğŸ‡¯' },
  { name: 'Tanzania', code: '255', flag: 'ğŸ‡¹ğŸ‡¿' },
  { name: 'Thailand', code: '66', flag: 'ğŸ‡¹ğŸ‡­' },
  { name: 'Togo', code: '228', flag: 'ğŸ‡¹ğŸ‡¬' },
  { name: 'Tonga', code: '676', flag: 'ğŸ‡¹ğŸ‡´' },
  { name: 'Trinidad and Tobago', code: '1868', flag: 'ğŸ‡¹ğŸ‡¹' },
  { name: 'Tunisia', code: '216', flag: 'ğŸ‡¹ğŸ‡³' },
  { name: 'Turkey', code: '90', flag: 'ğŸ‡¹ğŸ‡·' },
  { name: 'Turkmenistan', code: '993', flag: 'ğŸ‡¹ğŸ‡²' },
  { name: 'Tuvalu', code: '688', flag: 'ğŸ‡¹ğŸ‡»' },
  { name: 'Uganda', code: '256', flag: 'ğŸ‡ºğŸ‡¬' },
  { name: 'Ukraine', code: '380', flag: 'ğŸ‡ºğŸ‡¦' },
  { name: 'United Arab Emirates', code: '971', flag: 'ğŸ‡¦ğŸ‡ª' },
  { name: 'United Kingdom', code: '44', flag: 'ğŸ‡¬ğŸ‡§' },
  { name: 'United States', code: '1-US', flag: 'ğŸ‡ºğŸ‡¸' },
  { name: 'Uruguay', code: '598', flag: 'ğŸ‡ºğŸ‡¾' },
  { name: 'Uzbekistan', code: '998', flag: 'ğŸ‡ºğŸ‡¿' },
  { name: 'Vanuatu', code: '678', flag: 'ğŸ‡»ğŸ‡º' },
  { name: 'Vatican City', code: '379', flag: 'ğŸ‡»ğŸ‡¦' },
  { name: 'Venezuela', code: '58', flag: 'ğŸ‡»ğŸ‡ª' },
  { name: 'Vietnam', code: '84', flag: 'ğŸ‡»ğŸ‡³' },
  { name: 'Yemen', code: '967', flag: 'ğŸ‡¾ğŸ‡ª' },
  { name: 'Zambia', code: '260', flag: 'ğŸ‡¿ğŸ‡²' },
  { name: 'Zimbabwe', code: '263', flag: 'ğŸ‡¿ğŸ‡¼' },
]

/**
 * Find a country by its code
 * @param code The country code to search for
 * @returns The country object or undefined if not found
 */
export const findCountryByCode = (code: string): CountryCode | undefined => {
  // Handle the special case for "1" (legacy data)
  if (code === '1') {
    return countryCodes.find(country => country.name === 'United States')
  }
  
  // First try exact match
  const exactMatch = countryCodes.find(country => country.code === code)
  if (exactMatch) {
    return exactMatch
  }
  
  // If no exact match, try to match just the numeric part for codes like "1-US"
  const numericCode = code.replace(/\D/g, '')
  
  const numericMatch = countryCodes.find(country => {
    // Extract just the numeric part from country codes like "1-US"
    const countryNumericCode = country.code.split('-')[0]
    return countryNumericCode === numericCode
  })
  
  return numericMatch
}

/**
 * Search for countries by name or code
 * @param query The search query
 * @returns Array of matching countries
 */
export const searchCountries = (query: string): CountryCode[] => {
  if (!query.trim()) {
    return countryCodes
  }
  
  const lowercaseQuery = query.toLowerCase()
  return countryCodes.filter(country => {
    const countryName = country.name.toLowerCase()
    const countryCode = country.code.split('-')[0]
    
    // Check if country name contains the search query
    const nameMatch = countryName.includes(lowercaseQuery)
    
    // Check if country code starts with the search query (for numeric searches)
    const codeMatch = countryCode.startsWith(lowercaseQuery)
    
    return nameMatch || codeMatch
  })
} 